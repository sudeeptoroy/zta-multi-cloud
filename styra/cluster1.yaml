kind: Namespace
apiVersion: v1
metadata:
  name: styra-system
  labels:
    openpolicyagent.org/webhook: ignore

---

kind: Secret
apiVersion: v1
metadata:
  name: opa-server
  namespace: styra-system
type: kubernetes.io/tls
data:
  tls.cacrt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMRENDQWhTZ0F3SUJBZ0lRWE1kWWl5UjJDcDcyOWt3SWhaMjBhVEFOQmdrcWhraUc5dzBCQVFzRkFEQU8KTVF3d0NnWURWUVFLRXdOdmNHRXdJQmNOTWpJd09USXpNVEV6TXpJNVdoZ1BNakExTURBeU1EZ3hNVE16TWpsYQpNQTR4RERBS0JnTlZCQW9UQTI5d1lUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMWjR3U3lDeWc5c0sreUoxa295UGE5cXRROWxxQ0JTdE5tdzIwS01zMTRBbUp0YVBzSm01UUtTTGlRYmdhZFIKWXYwZkNpYjVqTFJkS1BJNDg3TVF4dEVxbHFZbVZsaUxFbUNWOGVkd3c4RGhqZWRIeG5McVErUVNjVVdQOWdnVwpxRkFSd2JyV2FteWdZMlFuNFVic0ZDWEZ6UEJORHN6K1kreS9ub2JNemwzc2d2QTh1WkJva0IrY2ZjYTN6OHc2CjJidHJYQ2NVK1QrM3ZIbmVOSEVIUVY0ZjNyaEw3Q0FkZTFERkFadmQ1UWNoMjI4N1cwbWE5UlJqbmZyeFp3K0kKUVR2MHV6enRsTUdyczFCendPVDZhVUdhSUw1SEkvbW5ZbHFKbGNiUnJ2UWx3QlJGTEp6WTluR2g5VjhtRTNMWgphTHpxa3RtRDVpTVpENm1hZnBOdjJNRUNBd0VBQWFPQmd6Q0JnREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEClZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWUQKVlIwT0JCWUVGRUVaTk83ejRhUVhKajRqZzlsazZWSFN0dVVhTUI4R0ExVWRFUVFZTUJhQ0ZHOXdZUzV6ZEhseQpZUzF6ZVhOMFpXMHVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCOW1lZVEvUGtDbW8xRUZxYk1DaW9HCjJtZStqc0xoblUwZnNITEtFOUtCVDBTRXM1NXcwemtGYkFsMFNJQ3g4SWNzbGlJd1VqN3Z4RnFJL0JZTkVkQjIKaG9zZkhBL21YaGU2L2ZzeUpIblM1THNpckU0VHZzNG1jdEg1OW9Pd2J3MWp1V2Z4MlpDelZSNjFtd29NV1hDdgpIbjF2QnNsRGVrdW9XK2t6TGRZSzVyTFc0ZUdUMHIyTGZBMnNvZkowOGlORktMeEpDeDZad1B1eXVKNnZEeEV1CjF4V0VQYUJzd2wyOFdvMm9iK2hFVURoWnJwZVRCb2doekdQTG5XZVgzV0hWSVZ2RHFUL1NJSmZpUWJISHFJejAKVFBVSnl0WVRkUU5WdFVGdjJqSVlLNzlDejhPMDVXY0dFTUZkbVBkRUR6Rk5vK1dqVVoyR2JNa0lRcWFrTmVSdgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMRENDQWhTZ0F3SUJBZ0lRWE1kWWl5UjJDcDcyOWt3SWhaMjBhVEFOQmdrcWhraUc5dzBCQVFzRkFEQU8KTVF3d0NnWURWUVFLRXdOdmNHRXdJQmNOTWpJd09USXpNVEV6TXpJNVdoZ1BNakExTURBeU1EZ3hNVE16TWpsYQpNQTR4RERBS0JnTlZCQW9UQTI5d1lUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMWjR3U3lDeWc5c0sreUoxa295UGE5cXRROWxxQ0JTdE5tdzIwS01zMTRBbUp0YVBzSm01UUtTTGlRYmdhZFIKWXYwZkNpYjVqTFJkS1BJNDg3TVF4dEVxbHFZbVZsaUxFbUNWOGVkd3c4RGhqZWRIeG5McVErUVNjVVdQOWdnVwpxRkFSd2JyV2FteWdZMlFuNFVic0ZDWEZ6UEJORHN6K1kreS9ub2JNemwzc2d2QTh1WkJva0IrY2ZjYTN6OHc2CjJidHJYQ2NVK1QrM3ZIbmVOSEVIUVY0ZjNyaEw3Q0FkZTFERkFadmQ1UWNoMjI4N1cwbWE5UlJqbmZyeFp3K0kKUVR2MHV6enRsTUdyczFCendPVDZhVUdhSUw1SEkvbW5ZbHFKbGNiUnJ2UWx3QlJGTEp6WTluR2g5VjhtRTNMWgphTHpxa3RtRDVpTVpENm1hZnBOdjJNRUNBd0VBQWFPQmd6Q0JnREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEClZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWUQKVlIwT0JCWUVGRUVaTk83ejRhUVhKajRqZzlsazZWSFN0dVVhTUI4R0ExVWRFUVFZTUJhQ0ZHOXdZUzV6ZEhseQpZUzF6ZVhOMFpXMHVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCOW1lZVEvUGtDbW8xRUZxYk1DaW9HCjJtZStqc0xoblUwZnNITEtFOUtCVDBTRXM1NXcwemtGYkFsMFNJQ3g4SWNzbGlJd1VqN3Z4RnFJL0JZTkVkQjIKaG9zZkhBL21YaGU2L2ZzeUpIblM1THNpckU0VHZzNG1jdEg1OW9Pd2J3MWp1V2Z4MlpDelZSNjFtd29NV1hDdgpIbjF2QnNsRGVrdW9XK2t6TGRZSzVyTFc0ZUdUMHIyTGZBMnNvZkowOGlORktMeEpDeDZad1B1eXVKNnZEeEV1CjF4V0VQYUJzd2wyOFdvMm9iK2hFVURoWnJwZVRCb2doekdQTG5XZVgzV0hWSVZ2RHFUL1NJSmZpUWJISHFJejAKVFBVSnl0WVRkUU5WdFVGdjJqSVlLNzlDejhPMDVXY0dFTUZkbVBkRUR6Rk5vK1dqVVoyR2JNa0lRcWFrTmVSdgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdG5qQkxJTEtEMndyN0luV1NqSTlyMnExRDJXb0lGSzAyYkRiUW95elhnQ1ltMW8rCndtYmxBcEl1SkJ1QnAxRmkvUjhLSnZtTXRGMG84amp6c3hERzBTcVdwaVpXV0lzU1lKWHg1M0REd09HTjUwZkcKY3VwRDVCSnhSWS8yQ0Jhb1VCSEJ1dFpxYktCalpDZmhSdXdVSmNYTThFME96UDVqN0wrZWhzek9YZXlDOER5NQprR2lRSDV4OXhyZlB6RHJadTJ0Y0p4VDVQN2U4ZWQ0MGNRZEJYaC9ldUV2c0lCMTdVTVVCbTkzbEJ5SGJienRiClNacjFGR09kK3ZGbkQ0aEJPL1M3UE8yVXdhdXpVSFBBNVBwcFFab2d2a2NqK2FkaVdvbVZ4dEd1OUNYQUZFVXMKbk5qMmNhSDFYeVlUY3Rsb3ZPcVMyWVBtSXhrUHFacCtrMi9Zd1FJREFRQUJBb0lCQURJQ3dwOGFjWnJzZ05WaApxZFBJRlZRQW9RTkpUMTBjamVpa0tsUUJFQ0FSZGNJT1ora01IblFuOEhHQkFIWUZQbVkxbmFpMCtMVnVXd3lZClEyS3VsRzg3aHZLZXkwZVZSa0ltbHBoaU5hU2xyU2pZYVRHUnQyM0pDRGFTa0ZJRE03cE9RNVNiczZ0MkFnZXYKVG5VTHV6SG5GcFk5NkhLU3ZueGl3R1lkdCtuUnMrL09SN2doMnNUNWUxVlZZU1pOZmhsOWFXa1lQeGZKS2JsMwpLU05EMWQ1cHBLRHNHNXlIalNraG0reDloczVXWWJsWUd5ZE8wdit6V0xuRW1ycnlmKzZOQlI4TTFMYnNHTTRhCk4wSklEUnZSSG1wT2hlZTJ1SEROQll0Ylk0dEFiOVE3aTNBWSt5NGxaRXNqVkFHbkZWWjdoYVV6K3pQanVGbDUKbHpQSFNBRUNnWUVBNmc5aTlTYStReG01U0R3VE1SZmpVK0RtNjdLbTlTSFJVT1lITmFWRVJMTDhXVHRKU0xZeApkRXRzU0NUUjVZc2huY0VtZFo0aEtVOG5ONExkenpxMEVHbnNsVU5VcHdrd3BGUVMyU3hPSldnWG0wZlRURHNaCmRKbm1WdVpCaE5WT1RwYnY3VEx4S1YwclNINUxLSlRXWW9HMnUyL1A5YTh3ZnAyQjY4TFp5Q0VDZ1lFQXg1TnQKMDdhL2NENHVPcHFSSlBjN3F3bkJwNFM5UVpuT1Z6Nm55SFhISWV1bTA4K2JMLzFOaElSYUtjV1Z2Z29xUVlEbgplM0VEV3RzdCtJb1NqMUNiWGxQTXY5ZUkrQ2dtZGZFVGZ1Y2Q1S1ZtY09QN2ZrUFZSZ25DZTFTQnN5bGNMSWNCClJ4MXpPanlQdVgrVEF6STZPVUsrZFNXcTdSQUQzdUJYbmJacGZLRUNnWUIwaFdoc1J2ZGRERWRURUtVMVFZRW8KVnNSZS9qZGp2WXdveS9zMjE2bWUwY1FTNEJMaG9lSUkxU3Q0MXV1dmJJNDFyTnhxbldoQTJtalpsOHE0eWE2dQpwU3prT2ZyQWxUQ2ovajdMNHVTY2RxK1ozQzN5dTFFMjNRN3duL3hxRm82L1RTRHdZdlh2ODdRQ2lPejlyT3IxCmEwSC9HZkRiakhXRjh2K2swUUgrUVFLQmdCQjlidnFxUStFYlVpaUhjdXl4L04waC9qMUFLMzhMSFZCNkhkVGoKWG1QQUc5V3VkcTBkYWRWRU5rcnpSMjhmV2VSMXFTcTY2TU1PRHh0VkZUbUFPSVl2dUdBMWg5eXhQSlJNS2djMwpRM0lMOUkzcFdITlRXWURpOTQzSEtyeEo4NUsrU08yK1VqSUNwUUYzdUFid2xIejh0YzNxSWRoYWxXZEo5Qk5VCjZoeGhBb0dBS0tCeUp6ZmtoZFZUcEc2b01ydWZ1ZDduT2xHT0Ntb3k4V29vVnFRdEJPNXBEanMwUGJERXRmUDEKYXJQN1ZDZUxTTG9ybVNMRmZra215WVdZYnVYd0VvVkdNWFN2ZWM1aFdvWFRoUGFwTlh1WHFNaGNranJFZVZ3WApCdHNwZ0VKZWVHUW1jcng5dmJPQlJMeHVSVFhyNzRSdUFPcmlubmFYeVIzM2Rqd2ZmVVE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: opa-config
  namespace: styra-system
data:
  opa.yaml: |
    services:
      - name: styra
        url: http://localhost:8080/v1
      - name: styra-bundles
        url: http://localhost:8080/v1/bundles
    labels:
      system-id: "e40ad32c551747fa8f0c0c89884db430"
      system-type: "kubernetes:v2"
    discovery:
      name: discovery
      service: styra
  slp.yaml: |
    services:
      - name: styra
        url: https://team1-jpmc.styra.com/v1
        credentials:
          bearer:
            token_path: /config/das_slp_token
      - credentials:
          bearer:
            token_path: /config/das_slp_token
        name: 'styra-bundles'
        url: 'https://team1-jpmc.styra.com/v1/bundles'
    labels:
      system-id: "e40ad32c551747fa8f0c0c89884db430"
      system-type: "kubernetes:v2"
    discovery:
      name: discovery
      resource: /systems/e40ad32c551747fa8f0c0c89884db430/discovery
      service: 'styra'

---

kind: Secret
apiVersion: v1
metadata:
  name: das-slp-token
  namespace: styra-system
data:
  das_slp_token: "bnBhTjFHSURhbjM2X0NtNTJhY014SmlFTkx2c0k5cTJ6UXZsSTdCMV9UYTRCRjY3OTFzMm5STzlsNmpuZ3dpem9vcm9VQjN4NFlQVWFoWkpnR2RRSjBwMl9B"

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opa-viewer
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: "system:serviceaccounts:styra-system"
  apiGroup: rbac.authorization.k8s.io

---

kind: Service
apiVersion: v1
metadata:
  name: opa
  namespace: styra-system
spec:
  selector:
    app: opa
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 4443

---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    app: opa
  namespace: styra-system
  name: opa
spec:
  replicas: 3
  serviceName: "opa"
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      annotations:
        checksum/config: 8946cd878604da4737017c7b32f83642c1773b93b209dc1206907c0d175083a6
      labels:
        app: opa
      name: opa
    spec:
      # Uncomment the tolerations and affinity fields below to run OPAs only
      # on the kubernetes cluster master nodes.
      # tolerations:
      #   - effect: NoSchedule
      #     key: node-role.kubernetes.io/master
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - opa
              topologyKey: kubernetes.io/hostname
            weight: 100
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         # for GKE and Azure, replace "master" with "agent" on the next line
      #         - key: node-role.kubernetes.io/master
      #           operator: Exists
      initContainers:
      - name: initpolicy
        image: "styra/styra-local-plane:0.4.4"
        imagePullPolicy: IfNotPresent
        resources: {}
        command:
        - /bin/sh
        - -c
        - |
          tr -dc 'A-F0-9' < /dev/urandom | dd bs=1 count=32 2>/dev/null > /authz/slp-token
          TOKEN=$(cat /authz/slp-token)
          cat > /authz/authz.rego <<EOF
          package system.authz
          # Deny access by default.
          default allow = false
          # Allow anonymous access to the default policy decision.
          allow { input.path = ["v0", "data", "main", "main"]; input.method = "POST" }
          allow { input.path = ["v0", "data", "policy", "com.styra.kubernetes.mutating", "main", "main"]; input.method = "POST" }
          allow { input.path = ["v0", "data", "policy", "com.styra.kubernetes.validating", "main", "main"]; input.method = "POST" }
          allow { input.path = ["v0", "data", "main", "main"]; input.method = "POST" }
          # This is only used for health check in liveness and readiness probe
          allow { input.path = ["health"]; input.method = "GET" }
          # This is only used for prometheus metrics
          allow { input.path = ["metrics"]; input.method = "GET" }
          allow { input.identity == "$TOKEN" }
          EOF
        volumeMounts:
          - name: authz
            mountPath: /authz
      containers:
      - name: opa
        image: "openpolicyagent/opa:0.44.0-rootless"
        resources:
          requests:
          limits:
        args:
          - "run"
          - "--server"
          - "--tls-cert-file=/certs/tls.crt"
          - "--tls-private-key-file=/certs/tls.key"
          - "--addr=0.0.0.0:4443"
          - "--addr=http://127.0.0.1:8181"
          - "--config-file=/config/opa.yaml"
          # authz enabled
          - "--authentication=token"
          - "--authorization=basic"
          - "/authz/authz.rego"
          - "--ignore=.*"
        livenessProbe:
          httpGet:
            path: /health
            scheme: HTTPS
            port: 4443
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health?bundle=true
            scheme: HTTPS
            port: 4443
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
            - readOnly: true
              mountPath: /config/opa.yaml
              subPath: opa.yaml
              name: opa-config-vol
            - readOnly: true
              mountPath: /certs
              name: opa-server
            - readOnly: true
              mountPath: /authz
              name: authz
      - name: styra-local-plane
        resources: {}
        image: "styra/styra-local-plane:0.4.4"
        volumeMounts:
         - name: authz
           readOnly: true
           mountPath: /authz
         - readOnly: true
           mountPath: /config/slp.yaml
           subPath: slp.yaml
           name: opa-config-vol
         - readOnly: true
           mountPath: /config/das_slp_token
           subPath: das_slp_token
           name: das-token
         - mountPath: /scratch
           name: slp-scratch-vol
        args:
          - "--config-file=/config/slp.yaml"
          - "--opa-auth-token-file=/authz/slp-token"
        env:
        livenessProbe:
          httpGet:
            path: /v1/system/alive
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /v1/system/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-config
      - name: opa-server
        secret:
          secretName: opa-server
      - name: authz
        emptyDir: {}
      - name: slp-scratch-vol
        emptyDir: {}
      - name: das-token
        secret:
          secretName: das-slp-token
          defaultMode: 0400
  # volumeClaimTemplates:
  # - metadata:
  #     name: slp-scratch-vol
  #     labels:
  #       slp-pvc: slp-kubernetes-app-pvc
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 2Gi

---

kind: Secret
apiVersion: v1
metadata:
  name: styra-access
  namespace: styra-system
type: Opaque
data:
  token: "TGhCbHZHR3dpQW5CRVEzVGpmeE1YZnp5MEVkOXpfSWlxaDd6NTNSdEM5WG12ajlwRnFQTUNYOHVRSExQTklQeGx5dEVfN1cwNEJUb0NEUTZKTV94b1dyVDBEZzdTX2dqRUFabFRTb0F0R1A0"

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: datasources-agent-config
  namespace: styra-system
data:
  conf.yaml: |-
    datasources:
      systems/e40ad32c551747fa8f0c0c89884db430/kubernetes/resources:

---

# datasources-agent needs read access to all resources, including the ability to list all resource types
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-all-global
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "watch", "list"]
- nonResourceURLs: ['*']
  verbs: ["get", "watch", "list"]

---

# Grant datasources-agent the above cluster role
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: datasources-agent-read-all
subjects:
- kind: Group
  name: "system:serviceaccounts:styra-system"
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: read-all-global
  apiGroup: rbac.authorization.k8s.io

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: datasources-agent
  namespace: styra-system
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: datasources-agent
  template:
    metadata:
     annotations:
       checksum/config: 197b5e628a565fd03471add9b8bf59dbd8271077120680efa6e332462bdd88e6
     labels:
       app: datasources-agent
    spec:
      containers:
      - name: datasources-agent
        image: "styra/datasources-agent:1.3.7"
        livenessProbe:
          httpGet:
            path: /v1/system/alive
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /v1/system/ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: datasources-agent-config
          mountPath: /config
        env:
          - name: STYRA_CUSTOMER_ID
            value: team1-jpmc
          - name: STYRA_SERVICE_URL
            value: https://team1-jpmc.styra.com
          - name: STYRA_STATUS_URL
            value: https://team1-jpmc.styra.com
          - name: STYRA_BUNDLE_URL
            value: https://team1-jpmc.styra.com
          - name: STYRA_TOKEN
            valueFrom:
              secretKeyRef:
                name: styra-access
                key: token
          - name: STYRA_CONFIG_FILE
            value: /config/conf.yaml
      volumes:
      - name: datasources-agent-config
        configMap:
          name: datasources-agent-config

---

kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: opa-validating-webhook
webhooks:
  - name: validating-webhook.openpolicyagent.org
    namespaceSelector:
      matchExpressions:
      - {key: openpolicyagent.org/webhook, operator: NotIn, values: [ ignore ]}
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["namespaces", "authorizationpolicies", "networkpolicies", "deployments", "services", "ingresses"]
      - operations: ["CONNECT", "CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["pods/*", "certificatesigningrequest/*"]
    sideEffects: None
    failurePolicy: Ignore
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMRENDQWhTZ0F3SUJBZ0lRWE1kWWl5UjJDcDcyOWt3SWhaMjBhVEFOQmdrcWhraUc5dzBCQVFzRkFEQU8KTVF3d0NnWURWUVFLRXdOdmNHRXdJQmNOTWpJd09USXpNVEV6TXpJNVdoZ1BNakExTURBeU1EZ3hNVE16TWpsYQpNQTR4RERBS0JnTlZCQW9UQTI5d1lUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMWjR3U3lDeWc5c0sreUoxa295UGE5cXRROWxxQ0JTdE5tdzIwS01zMTRBbUp0YVBzSm01UUtTTGlRYmdhZFIKWXYwZkNpYjVqTFJkS1BJNDg3TVF4dEVxbHFZbVZsaUxFbUNWOGVkd3c4RGhqZWRIeG5McVErUVNjVVdQOWdnVwpxRkFSd2JyV2FteWdZMlFuNFVic0ZDWEZ6UEJORHN6K1kreS9ub2JNemwzc2d2QTh1WkJva0IrY2ZjYTN6OHc2CjJidHJYQ2NVK1QrM3ZIbmVOSEVIUVY0ZjNyaEw3Q0FkZTFERkFadmQ1UWNoMjI4N1cwbWE5UlJqbmZyeFp3K0kKUVR2MHV6enRsTUdyczFCendPVDZhVUdhSUw1SEkvbW5ZbHFKbGNiUnJ2UWx3QlJGTEp6WTluR2g5VjhtRTNMWgphTHpxa3RtRDVpTVpENm1hZnBOdjJNRUNBd0VBQWFPQmd6Q0JnREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEClZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWUQKVlIwT0JCWUVGRUVaTk83ejRhUVhKajRqZzlsazZWSFN0dVVhTUI4R0ExVWRFUVFZTUJhQ0ZHOXdZUzV6ZEhseQpZUzF6ZVhOMFpXMHVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCOW1lZVEvUGtDbW8xRUZxYk1DaW9HCjJtZStqc0xoblUwZnNITEtFOUtCVDBTRXM1NXcwemtGYkFsMFNJQ3g4SWNzbGlJd1VqN3Z4RnFJL0JZTkVkQjIKaG9zZkhBL21YaGU2L2ZzeUpIblM1THNpckU0VHZzNG1jdEg1OW9Pd2J3MWp1V2Z4MlpDelZSNjFtd29NV1hDdgpIbjF2QnNsRGVrdW9XK2t6TGRZSzVyTFc0ZUdUMHIyTGZBMnNvZkowOGlORktMeEpDeDZad1B1eXVKNnZEeEV1CjF4V0VQYUJzd2wyOFdvMm9iK2hFVURoWnJwZVRCb2doekdQTG5XZVgzV0hWSVZ2RHFUL1NJSmZpUWJISHFJejAKVFBVSnl0WVRkUU5WdFVGdjJqSVlLNzlDejhPMDVXY0dFTUZkbVBkRUR6Rk5vK1dqVVoyR2JNa0lRcWFrTmVSdgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        namespace: styra-system
        name: opa
        path: /v0/data/policy/com.styra.kubernetes.validating/main/main
    admissionReviewVersions: ["v1", "v1beta1"]
    timeoutSeconds: 1

---

kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: opa-mutating-webhook
webhooks:
  - name: mutating-webhook.openpolicyagent.org
    namespaceSelector:
      matchExpressions:
      - {key: openpolicyagent.org/webhook, operator: NotIn, values: [ ignore ]}
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["namespaces", "authorizationpolicies", "networkpolicies", "deployments", "services", "ingresses"]
    sideEffects: None
    failurePolicy: Ignore
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMRENDQWhTZ0F3SUJBZ0lRWE1kWWl5UjJDcDcyOWt3SWhaMjBhVEFOQmdrcWhraUc5dzBCQVFzRkFEQU8KTVF3d0NnWURWUVFLRXdOdmNHRXdJQmNOTWpJd09USXpNVEV6TXpJNVdoZ1BNakExTURBeU1EZ3hNVE16TWpsYQpNQTR4RERBS0JnTlZCQW9UQTI5d1lUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMWjR3U3lDeWc5c0sreUoxa295UGE5cXRROWxxQ0JTdE5tdzIwS01zMTRBbUp0YVBzSm01UUtTTGlRYmdhZFIKWXYwZkNpYjVqTFJkS1BJNDg3TVF4dEVxbHFZbVZsaUxFbUNWOGVkd3c4RGhqZWRIeG5McVErUVNjVVdQOWdnVwpxRkFSd2JyV2FteWdZMlFuNFVic0ZDWEZ6UEJORHN6K1kreS9ub2JNemwzc2d2QTh1WkJva0IrY2ZjYTN6OHc2CjJidHJYQ2NVK1QrM3ZIbmVOSEVIUVY0ZjNyaEw3Q0FkZTFERkFadmQ1UWNoMjI4N1cwbWE5UlJqbmZyeFp3K0kKUVR2MHV6enRsTUdyczFCendPVDZhVUdhSUw1SEkvbW5ZbHFKbGNiUnJ2UWx3QlJGTEp6WTluR2g5VjhtRTNMWgphTHpxa3RtRDVpTVpENm1hZnBOdjJNRUNBd0VBQWFPQmd6Q0JnREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEClZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWUQKVlIwT0JCWUVGRUVaTk83ejRhUVhKajRqZzlsazZWSFN0dVVhTUI4R0ExVWRFUVFZTUJhQ0ZHOXdZUzV6ZEhseQpZUzF6ZVhOMFpXMHVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCOW1lZVEvUGtDbW8xRUZxYk1DaW9HCjJtZStqc0xoblUwZnNITEtFOUtCVDBTRXM1NXcwemtGYkFsMFNJQ3g4SWNzbGlJd1VqN3Z4RnFJL0JZTkVkQjIKaG9zZkhBL21YaGU2L2ZzeUpIblM1THNpckU0VHZzNG1jdEg1OW9Pd2J3MWp1V2Z4MlpDelZSNjFtd29NV1hDdgpIbjF2QnNsRGVrdW9XK2t6TGRZSzVyTFc0ZUdUMHIyTGZBMnNvZkowOGlORktMeEpDeDZad1B1eXVKNnZEeEV1CjF4V0VQYUJzd2wyOFdvMm9iK2hFVURoWnJwZVRCb2doekdQTG5XZVgzV0hWSVZ2RHFUL1NJSmZpUWJISHFJejAKVFBVSnl0WVRkUU5WdFVGdjJqSVlLNzlDejhPMDVXY0dFTUZkbVBkRUR6Rk5vK1dqVVoyR2JNa0lRcWFrTmVSdgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        namespace: styra-system
        name: opa
        path: /v0/data/policy/com.styra.kubernetes.mutating/main/main
    admissionReviewVersions: ["v1", "v1beta1"]
    timeoutSeconds: 1
